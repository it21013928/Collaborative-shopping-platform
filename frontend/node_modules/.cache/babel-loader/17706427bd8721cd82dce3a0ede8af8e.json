{"ast":null,"code":"import * as React from \"react\";\nexport var setRef = function setRef(ref, value) {\n  if (typeof ref === \"function\") {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n};\nexport var useForkRef = function useForkRef(refA, refB) {\n  return React.useMemo(function () {\n    return refA == null && refB == null ? null : function (refValue) {\n      setRef(refA, refValue);\n      setRef(refB, refValue);\n    };\n  }, [refA, refB]);\n};","map":{"version":3,"names":["React","setRef","ref","value","current","useForkRef","refA","refB","useMemo","refValue"],"sources":["C:/AAA Kithmina/Education/SLIIT/Year 3/Y3S1/Disributed Systems - SE3020/Assignments/01/Project/Collaborative-shopping-platform/frontend/node_modules/yet-another-react-lightbox/dist/core/hooks/useForkRef.js"],"sourcesContent":["import * as React from \"react\";\nexport const setRef = (ref, value) => {\n    if (typeof ref === \"function\") {\n        ref(value);\n    }\n    else if (ref) {\n        ref.current = value;\n    }\n};\nexport const useForkRef = (refA, refB) => React.useMemo(() => refA == null && refB == null\n    ? null\n    : (refValue) => {\n        setRef(refA, refValue);\n        setRef(refB, refValue);\n    }, [refA, refB]);\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAM,CAAIC,GAAG,EAAEC,KAAK,EAAK;EAClC,IAAI,OAAOD,GAAG,KAAK,UAAU,EAAE;IAC3BA,GAAG,CAACC,KAAK,CAAC;EACd,CAAC,MACI,IAAID,GAAG,EAAE;IACVA,GAAG,CAACE,OAAO,GAAGD,KAAK;EACvB;AACJ,CAAC;AACD,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAU,CAAIC,IAAI,EAAEC,IAAI;EAAA,OAAKP,KAAK,CAACQ,OAAO,CAAC;IAAA,OAAMF,IAAI,IAAI,IAAI,IAAIC,IAAI,IAAI,IAAI,GACpF,IAAI,GACJ,UAACE,QAAQ,EAAK;MACZR,MAAM,CAACK,IAAI,EAAEG,QAAQ,CAAC;MACtBR,MAAM,CAACM,IAAI,EAAEE,QAAQ,CAAC;IAC1B,CAAC;EAAA,GAAE,CAACH,IAAI,EAAEC,IAAI,CAAC,CAAC;AAAA"},"metadata":{},"sourceType":"module"}