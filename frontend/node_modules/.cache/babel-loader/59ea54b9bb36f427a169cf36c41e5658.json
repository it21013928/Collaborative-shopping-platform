{"ast":null,"code":"import _objectSpread from \"C:/AAA Kithmina/Education/SLIIT/Year 3/Y3S1/Disributed Systems - SE3020/Assignments/01/Project/Collaborative-shopping-platform/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"C:/AAA Kithmina/Education/SLIIT/Year 3/Y3S1/Disributed Systems - SE3020/Assignments/01/Project/Collaborative-shopping-platform/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\AAA Kithmina\\\\Education\\\\SLIIT\\\\Year 3\\\\Y3S1\\\\Disributed Systems - SE3020\\\\Assignments\\\\01\\\\Project\\\\Collaborative-shopping-platform\\\\frontend\\\\src\\\\dashboard\\\\views\\\\material-kit\\\\auto-complete\\\\AutocompleteCombo.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { Autocomplete, styled, TextField } from '@mui/material';\nimport { createFilterOptions } from '@mui/material/Autocomplete';\nimport React, { Fragment } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar AutoComplete = styled(Autocomplete)(function () {\n  return {\n    width: 300,\n    marginBottom: '16px'\n  };\n});\n_c = AutoComplete;\nvar suggestions = [{\n  label: 'Afghanistan'\n}, {\n  label: 'Aland Islands'\n}, {\n  label: 'Albania'\n}, {\n  label: 'Algeria'\n}, {\n  label: 'American Samoa'\n}, {\n  label: 'Andorra'\n}, {\n  label: 'Angola'\n}, {\n  label: 'Anguilla'\n}, {\n  label: 'Antarctica'\n}, {\n  label: 'Antigua and Barbuda'\n}, {\n  label: 'Argentina'\n}, {\n  label: 'Armenia'\n}, {\n  label: 'Aruba'\n}, {\n  label: 'Australia'\n}, {\n  label: 'Austria'\n}, {\n  label: 'Azerbaijan'\n}, {\n  label: 'Bahamas'\n}, {\n  label: 'Bahrain'\n}, {\n  label: 'Bangladesh'\n}, {\n  label: 'Barbados'\n}, {\n  label: 'Belarus'\n}, {\n  label: 'Belgium'\n}, {\n  label: 'Belize'\n}, {\n  label: 'Benin'\n}, {\n  label: 'Bermuda'\n}, {\n  label: 'Bhutan'\n}, {\n  label: 'Bolivia, Plurinational State of'\n}, {\n  label: 'Bonaire, Sint Eustatius and Saba'\n}, {\n  label: 'Bosnia and Herzegovina'\n}, {\n  label: 'Botswana'\n}, {\n  label: 'Bouvet Island'\n}, {\n  label: 'Brazil'\n}, {\n  label: 'British Indian Ocean Territory'\n}, {\n  label: 'Brunei Darussalam'\n}];\nvar filter = createFilterOptions();\nvar AutocompleteCombo = function AutocompleteCombo() {\n  _s();\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    value = _React$useState2[0],\n    setValue = _React$useState2[1];\n  var handleChange = function handleChange(_, newValue) {\n    if (newValue && newValue.inputValue) {\n      setValue({\n        label: newValue.inputValue\n      });\n      return;\n    }\n    setValue(newValue);\n  };\n  var filterOptions = function filterOptions(options, params) {\n    var filtered = filter(options, params);\n    if (params.inputValue !== '') {\n      filtered.push({\n        inputValue: params.inputValue,\n        label: \"Add \\\"\".concat(params.inputValue, \"\\\"\")\n      });\n    }\n    return filtered;\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AutoComplete, {\n      options: suggestions,\n      getOptionLabel: function getOptionLabel(option) {\n        return option.label;\n      },\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n          label: \"Combo box\",\n          variant: \"outlined\",\n          fullWidth: true\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(AutoComplete, {\n      value: value,\n      options: suggestions,\n      onChange: handleChange,\n      filterOptions: filterOptions,\n      getOptionLabel: function getOptionLabel(option) {\n        // e.g value selected with enter, right from the input\n        if (typeof option === 'string') {\n          return option;\n        }\n        if (option.inputValue) {\n          return option.inputValue;\n        }\n        return option.label;\n      },\n      renderOption: function renderOption(option) {\n        return option.label;\n      },\n      style: {\n        width: 300\n      },\n      freeSolo: true,\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n          label: \"Free solo with text demo\",\n          variant: \"outlined\",\n          fullWidth: true\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(AutoComplete, {\n      options: suggestions,\n      getOptionLabel: function getOptionLabel(option) {\n        return option.label;\n      },\n      getOptionDisabled: function getOptionDisabled(option) {\n        return option === suggestions[0] || option === suggestions[2];\n      },\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n          label: \"Disabled option\",\n          variant: \"outlined\",\n          fullWidth: true\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, _this);\n};\n_s(AutocompleteCombo, \"EEjdpY/CSe7/lDQurV9yi1RbKSs=\");\n_c2 = AutocompleteCombo;\nexport default AutocompleteCombo;\nvar _c, _c2;\n$RefreshReg$(_c, \"AutoComplete\");\n$RefreshReg$(_c2, \"AutocompleteCombo\");","map":{"version":3,"names":["Autocomplete","styled","TextField","createFilterOptions","React","Fragment","AutoComplete","width","marginBottom","suggestions","label","filter","AutocompleteCombo","useState","value","setValue","handleChange","_","newValue","inputValue","filterOptions","options","params","filtered","push","option"],"sources":["C:/AAA Kithmina/Education/SLIIT/Year 3/Y3S1/Disributed Systems - SE3020/Assignments/01/Project/Collaborative-shopping-platform/frontend/src/dashboard/views/material-kit/auto-complete/AutocompleteCombo.jsx"],"sourcesContent":["import { Autocomplete, styled, TextField } from '@mui/material';\r\nimport { createFilterOptions } from '@mui/material/Autocomplete';\r\nimport React, { Fragment } from 'react';\r\n\r\nconst AutoComplete = styled(Autocomplete)(() => ({\r\n  width: 300,\r\n  marginBottom: '16px',\r\n}));\r\n\r\nconst suggestions = [\r\n  { label: 'Afghanistan' },\r\n  { label: 'Aland Islands' },\r\n  { label: 'Albania' },\r\n  { label: 'Algeria' },\r\n  { label: 'American Samoa' },\r\n  { label: 'Andorra' },\r\n  { label: 'Angola' },\r\n  { label: 'Anguilla' },\r\n  { label: 'Antarctica' },\r\n  { label: 'Antigua and Barbuda' },\r\n  { label: 'Argentina' },\r\n  { label: 'Armenia' },\r\n  { label: 'Aruba' },\r\n  { label: 'Australia' },\r\n  { label: 'Austria' },\r\n  { label: 'Azerbaijan' },\r\n  { label: 'Bahamas' },\r\n  { label: 'Bahrain' },\r\n  { label: 'Bangladesh' },\r\n  { label: 'Barbados' },\r\n  { label: 'Belarus' },\r\n  { label: 'Belgium' },\r\n  { label: 'Belize' },\r\n  { label: 'Benin' },\r\n  { label: 'Bermuda' },\r\n  { label: 'Bhutan' },\r\n  { label: 'Bolivia, Plurinational State of' },\r\n  { label: 'Bonaire, Sint Eustatius and Saba' },\r\n  { label: 'Bosnia and Herzegovina' },\r\n  { label: 'Botswana' },\r\n  { label: 'Bouvet Island' },\r\n  { label: 'Brazil' },\r\n  { label: 'British Indian Ocean Territory' },\r\n  { label: 'Brunei Darussalam' },\r\n];\r\n\r\nconst filter = createFilterOptions();\r\n\r\nconst AutocompleteCombo = () => {\r\n  const [value, setValue] = React.useState(null);\r\n\r\n  const handleChange = (_, newValue) => {\r\n    if (newValue && newValue.inputValue) {\r\n      setValue({ label: newValue.inputValue });\r\n      return;\r\n    }\r\n    setValue(newValue);\r\n  };\r\n\r\n  const filterOptions = (options, params) => {\r\n    const filtered = filter(options, params);\r\n    if (params.inputValue !== '') {\r\n      filtered.push({ inputValue: params.inputValue, label: `Add \"${params.inputValue}\"` });\r\n    }\r\n    return filtered;\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <AutoComplete\r\n        options={suggestions}\r\n        getOptionLabel={(option) => option.label}\r\n        renderInput={(params) => (\r\n          <TextField {...params} label=\"Combo box\" variant=\"outlined\" fullWidth />\r\n        )}\r\n      />\r\n\r\n      <AutoComplete\r\n        value={value}\r\n        options={suggestions}\r\n        onChange={handleChange}\r\n        filterOptions={filterOptions}\r\n        getOptionLabel={(option) => {\r\n          // e.g value selected with enter, right from the input\r\n          if (typeof option === 'string') {\r\n            return option;\r\n          }\r\n          if (option.inputValue) {\r\n            return option.inputValue;\r\n          }\r\n          return option.label;\r\n        }}\r\n        renderOption={(option) => option.label}\r\n        style={{ width: 300 }}\r\n        freeSolo\r\n        renderInput={(params) => (\r\n          <TextField {...params} label=\"Free solo with text demo\" variant=\"outlined\" fullWidth />\r\n        )}\r\n      />\r\n\r\n      <AutoComplete\r\n        options={suggestions}\r\n        getOptionLabel={(option) => option.label}\r\n        getOptionDisabled={(option) => option === suggestions[0] || option === suggestions[2]}\r\n        renderInput={(params) => (\r\n          <TextField {...params} label=\"Disabled option\" variant=\"outlined\" fullWidth />\r\n        )}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AutocompleteCombo;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}