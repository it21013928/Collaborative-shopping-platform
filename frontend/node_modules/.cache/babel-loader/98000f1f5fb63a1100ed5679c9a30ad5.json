{"ast":null,"code":"import _slicedToArray from \"C:/AAA Kithmina/Education/SLIIT/Year 3/Y3S1/Disributed Systems - SE3020/Assignments/01/Project/Collaborative-shopping-platform/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from \"react\";\nimport { createIcon, IconButton, label, useEventCallback } from \"../../core/index.js\";\nimport { useFullscreen } from \"./FullscreenContext.js\";\nvar EnterFullscreenIcon = createIcon(\"EnterFullscreen\", React.createElement(\"path\", {\n  d: \"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\"\n}));\nvar ExitFullscreenIcon = createIcon(\"ExitFullscreen\", React.createElement(\"path\", {\n  d: \"M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z\"\n}));\nexport var FullscreenButton = function FullscreenButton(_ref) {\n  var auto = _ref.auto,\n    labels = _ref.labels,\n    render = _ref.render;\n  var _a;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    mounted = _React$useState2[0],\n    setMounted = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    fullscreen = _React$useState4[0],\n    setFullscreen = _React$useState4[1];\n  var containerRef = useFullscreen();\n  var isFullscreenEnabled = function isFullscreenEnabled() {\n    var _a, _b, _c, _d;\n    return (_d = (_c = (_b = (_a = document.fullscreenEnabled) !== null && _a !== void 0 ? _a : document.webkitFullscreenEnabled) !== null && _b !== void 0 ? _b : document.mozFullScreenEnabled) !== null && _c !== void 0 ? _c : document.msFullscreenEnabled) !== null && _d !== void 0 ? _d : false;\n  };\n  var getFullscreenElement = React.useCallback(function () {\n    var _a, _b, _c;\n    return (_c = (_b = (_a = document.fullscreenElement) !== null && _a !== void 0 ? _a : document.webkitFullscreenElement) !== null && _b !== void 0 ? _b : document.mozFullScreenElement) !== null && _c !== void 0 ? _c : document.msFullscreenElement;\n  }, []);\n  var requestFullscreen = React.useCallback(function () {\n    var container = containerRef.current;\n    if (container) {\n      try {\n        if (container.requestFullscreen) {\n          container.requestFullscreen().catch(function () {});\n        } else if (container.webkitRequestFullscreen) {\n          container.webkitRequestFullscreen();\n        } else if (container.mozRequestFullScreen) {\n          container.mozRequestFullScreen();\n        } else if (container.msRequestFullscreen) {\n          container.msRequestFullscreen();\n        }\n      } catch (err) {}\n    }\n  }, [containerRef]);\n  var exitFullscreen = React.useCallback(function () {\n    if (getFullscreenElement()) {\n      try {\n        if (document.exitFullscreen) {\n          document.exitFullscreen().catch(function () {});\n        } else if (document.webkitExitFullscreen) {\n          document.webkitExitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n          document.mozCancelFullScreen();\n        } else if (document.msExitFullscreen) {\n          document.msExitFullscreen();\n        }\n      } catch (err) {}\n    }\n  }, [getFullscreenElement]);\n  var toggleFullscreen = React.useCallback(function () {\n    if (fullscreen) {\n      exitFullscreen();\n    } else {\n      requestFullscreen();\n    }\n  }, [fullscreen, requestFullscreen, exitFullscreen]);\n  var fullscreenChangeListener = React.useCallback(function () {\n    if (getFullscreenElement() === containerRef.current) {\n      setFullscreen(true);\n    } else {\n      setFullscreen(false);\n    }\n  }, [containerRef, getFullscreenElement]);\n  React.useEffect(function () {\n    setMounted(true);\n    return function () {\n      return setMounted(false);\n    };\n  }, []);\n  React.useEffect(function () {\n    var events = [\"fullscreenchange\", \"webkitfullscreenchange\", \"mozfullscreenchange\", \"MSFullscreenChange\"];\n    events.forEach(function (event) {\n      document.addEventListener(event, fullscreenChangeListener);\n    });\n    return function () {\n      events.forEach(function (event) {\n        document.removeEventListener(event, fullscreenChangeListener);\n      });\n    };\n  }, [fullscreenChangeListener]);\n  var handleAutoFullscreen = useEventCallback(function () {\n    if (auto) {\n      requestFullscreen();\n    }\n  });\n  React.useEffect(function () {\n    handleAutoFullscreen();\n    return function () {\n      exitFullscreen();\n    };\n  }, [handleAutoFullscreen, exitFullscreen]);\n  if (!mounted || !isFullscreenEnabled()) return null;\n  var customButton = (_a = render.buttonFullscreen) === null || _a === void 0 ? void 0 : _a.call(render, {\n    fullscreen: fullscreen,\n    toggleFullscreen: toggleFullscreen\n  });\n  return customButton === undefined ? React.createElement(IconButton, {\n    label: fullscreen ? label(labels, \"Exit Fullscreen\") : label(labels, \"Enter Fullscreen\"),\n    icon: fullscreen ? ExitFullscreenIcon : EnterFullscreenIcon,\n    renderIcon: fullscreen ? render.iconExitFullscreen : render.iconEnterFullscreen,\n    onClick: toggleFullscreen\n  }) : React.createElement(React.Fragment, null, customButton);\n};","map":{"version":3,"names":["React","createIcon","IconButton","label","useEventCallback","useFullscreen","EnterFullscreenIcon","createElement","d","ExitFullscreenIcon","FullscreenButton","auto","labels","render","_a","useState","mounted","setMounted","fullscreen","setFullscreen","containerRef","isFullscreenEnabled","_b","_c","_d","document","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","getFullscreenElement","useCallback","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","requestFullscreen","container","current","catch","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","err","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","toggleFullscreen","fullscreenChangeListener","useEffect","events","forEach","event","addEventListener","removeEventListener","handleAutoFullscreen","customButton","buttonFullscreen","call","undefined","icon","renderIcon","iconExitFullscreen","iconEnterFullscreen","onClick","Fragment"],"sources":["C:/AAA Kithmina/Education/SLIIT/Year 3/Y3S1/Disributed Systems - SE3020/Assignments/01/Project/Collaborative-shopping-platform/frontend/node_modules/yet-another-react-lightbox/dist/plugins/fullscreen/FullscreenButton.js"],"sourcesContent":["import * as React from \"react\";\nimport { createIcon, IconButton, label, useEventCallback } from \"../../core/index.js\";\nimport { useFullscreen } from \"./FullscreenContext.js\";\nconst EnterFullscreenIcon = createIcon(\"EnterFullscreen\", React.createElement(\"path\", { d: \"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\" }));\nconst ExitFullscreenIcon = createIcon(\"ExitFullscreen\", React.createElement(\"path\", { d: \"M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z\" }));\nexport const FullscreenButton = ({ auto, labels, render }) => {\n    var _a;\n    const [mounted, setMounted] = React.useState(false);\n    const [fullscreen, setFullscreen] = React.useState(false);\n    const containerRef = useFullscreen();\n    const isFullscreenEnabled = () => {\n        var _a, _b, _c, _d;\n        return (_d = (_c = (_b = (_a = document.fullscreenEnabled) !== null && _a !== void 0 ? _a : document.webkitFullscreenEnabled) !== null && _b !== void 0 ? _b : document.mozFullScreenEnabled) !== null && _c !== void 0 ? _c : document.msFullscreenEnabled) !== null && _d !== void 0 ? _d : false;\n    };\n    const getFullscreenElement = React.useCallback(() => {\n        var _a, _b, _c;\n        return (_c = (_b = (_a = document.fullscreenElement) !== null && _a !== void 0 ? _a : document.webkitFullscreenElement) !== null && _b !== void 0 ? _b : document.mozFullScreenElement) !== null && _c !== void 0 ? _c : document.msFullscreenElement;\n    }, []);\n    const requestFullscreen = React.useCallback(() => {\n        const container = containerRef.current;\n        if (container) {\n            try {\n                if (container.requestFullscreen) {\n                    container.requestFullscreen().catch(() => { });\n                }\n                else if (container.webkitRequestFullscreen) {\n                    container.webkitRequestFullscreen();\n                }\n                else if (container.mozRequestFullScreen) {\n                    container.mozRequestFullScreen();\n                }\n                else if (container.msRequestFullscreen) {\n                    container.msRequestFullscreen();\n                }\n            }\n            catch (err) {\n            }\n        }\n    }, [containerRef]);\n    const exitFullscreen = React.useCallback(() => {\n        if (getFullscreenElement()) {\n            try {\n                if (document.exitFullscreen) {\n                    document.exitFullscreen().catch(() => { });\n                }\n                else if (document.webkitExitFullscreen) {\n                    document.webkitExitFullscreen();\n                }\n                else if (document.mozCancelFullScreen) {\n                    document.mozCancelFullScreen();\n                }\n                else if (document.msExitFullscreen) {\n                    document.msExitFullscreen();\n                }\n            }\n            catch (err) {\n            }\n        }\n    }, [getFullscreenElement]);\n    const toggleFullscreen = React.useCallback(() => {\n        if (fullscreen) {\n            exitFullscreen();\n        }\n        else {\n            requestFullscreen();\n        }\n    }, [fullscreen, requestFullscreen, exitFullscreen]);\n    const fullscreenChangeListener = React.useCallback(() => {\n        if (getFullscreenElement() === containerRef.current) {\n            setFullscreen(true);\n        }\n        else {\n            setFullscreen(false);\n        }\n    }, [containerRef, getFullscreenElement]);\n    React.useEffect(() => {\n        setMounted(true);\n        return () => setMounted(false);\n    }, []);\n    React.useEffect(() => {\n        const events = [\"fullscreenchange\", \"webkitfullscreenchange\", \"mozfullscreenchange\", \"MSFullscreenChange\"];\n        events.forEach((event) => {\n            document.addEventListener(event, fullscreenChangeListener);\n        });\n        return () => {\n            events.forEach((event) => {\n                document.removeEventListener(event, fullscreenChangeListener);\n            });\n        };\n    }, [fullscreenChangeListener]);\n    const handleAutoFullscreen = useEventCallback(() => {\n        if (auto) {\n            requestFullscreen();\n        }\n    });\n    React.useEffect(() => {\n        handleAutoFullscreen();\n        return () => {\n            exitFullscreen();\n        };\n    }, [handleAutoFullscreen, exitFullscreen]);\n    if (!mounted || !isFullscreenEnabled())\n        return null;\n    const customButton = (_a = render.buttonFullscreen) === null || _a === void 0 ? void 0 : _a.call(render, { fullscreen, toggleFullscreen });\n    return customButton === undefined ? (React.createElement(IconButton, { label: fullscreen ? label(labels, \"Exit Fullscreen\") : label(labels, \"Enter Fullscreen\"), icon: fullscreen ? ExitFullscreenIcon : EnterFullscreenIcon, renderIcon: fullscreen ? render.iconExitFullscreen : render.iconEnterFullscreen, onClick: toggleFullscreen })) : (React.createElement(React.Fragment, null, customButton));\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}