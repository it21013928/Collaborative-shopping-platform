{"ast":null,"code":"import _slicedToArray from \"C:/AAA Kithmina/Education/SLIIT/Year 3/Y3S1/Disributed Systems - SE3020/Assignments/01/Project/Collaborative-shopping-platform/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\AAA Kithmina\\\\Education\\\\SLIIT\\\\Year 3\\\\Y3S1\\\\Disributed Systems - SE3020\\\\Assignments\\\\01\\\\Project\\\\Collaborative-shopping-platform\\\\frontend\\\\src\\\\dashboard\\\\views\\\\material-kit\\\\dialog\\\\ResponsiveDialog.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Box, useTheme } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResponsiveDialog() {\n  _s();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    open = _useState2[0],\n    setOpen = _useState2[1];\n  var theme = useTheme();\n  var fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  var handleClickOpen = function handleClickOpen() {\n    return setOpen(true);\n  };\n  var handleClose = function handleClose() {\n    return setOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: handleClickOpen,\n      children: \"Open responsive dialog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullScreen: fullScreen,\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"responsive-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"responsive-dialog-title\",\n        children: \"Use Google's location service?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Disagree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          autoFocus: true,\n          children: \"Agree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(ResponsiveDialog, \"gypwRtBDbslO8P6gH7C7gsNoXQ4=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n_c = ResponsiveDialog;\nvar _c;\n$RefreshReg$(_c, \"ResponsiveDialog\");","map":{"version":3,"names":["useState","Box","useTheme","Button","Dialog","DialogTitle","DialogActions","DialogContent","DialogContentText","useMediaQuery","ResponsiveDialog","open","setOpen","theme","fullScreen","breakpoints","down","handleClickOpen","handleClose"],"sources":["C:/AAA Kithmina/Education/SLIIT/Year 3/Y3S1/Disributed Systems - SE3020/Assignments/01/Project/Collaborative-shopping-platform/frontend/src/dashboard/views/material-kit/dialog/ResponsiveDialog.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { Box, useTheme } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\n\r\nexport default function ResponsiveDialog() {\r\n  const [open, setOpen] = useState(false);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  const handleClickOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <Box>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open responsive dialog\r\n      </Button>\r\n\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">Use Google's location service?</DialogTitle>\r\n\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Let Google help apps determine location. This means sending anonymous location data to\r\n            Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,GAAG,EAAEC,QAAQ,QAAQ,eAAe;AAC7C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,iBAAiB,MAAM,iCAAiC;AAC/D,OAAOC,aAAa,MAAM,6BAA6B;AAAC;AAExD,eAAe,SAASC,gBAAgB,GAAG;EAAA;EACzC,gBAAwBV,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAhCW,IAAI;IAAEC,OAAO;EACpB,IAAMC,KAAK,GAAGX,QAAQ,EAAE;EACxB,IAAMY,UAAU,GAAGL,aAAa,CAACI,KAAK,CAACE,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EAE9D,IAAMC,eAAe,GAAG,SAAlBA,eAAe;IAAA,OAASL,OAAO,CAAC,IAAI,CAAC;EAAA;EAC3C,IAAMM,WAAW,GAAG,SAAdA,WAAW;IAAA,OAASN,OAAO,CAAC,KAAK,CAAC;EAAA;EAExC,oBACE,QAAC,GAAG;IAAA,wBACF,QAAC,MAAM;MAAC,OAAO,EAAC,UAAU;MAAC,KAAK,EAAC,SAAS;MAAC,OAAO,EAAEK,eAAgB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAE3D,eAET,QAAC,MAAM;MACL,UAAU,EAAEH,UAAW;MACvB,IAAI,EAAEH,IAAK;MACX,OAAO,EAAEO,WAAY;MACrB,mBAAgB,yBAAyB;MAAA,wBAEzC,QAAC,WAAW;QAAC,EAAE,EAAC,yBAAyB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA6C,eAEtF,QAAC,aAAa;QAAA,uBACZ,QAAC,iBAAiB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAGE;QAAA;QAAA;QAAA;MAAA,QACN,eAEhB,QAAC,aAAa;QAAA,wBACZ,QAAC,MAAM;UAAC,OAAO,EAAEA,WAAY;UAAC,KAAK,EAAC,SAAS;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAEpC,eAET,QAAC,MAAM;UAAC,OAAO,EAAEA,WAAY;UAAC,KAAK,EAAC,SAAS;UAAC,SAAS;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAE9C;MAAA;QAAA;QAAA;QAAA;MAAA,QACK;IAAA;MAAA;MAAA;MAAA;IAAA,QACT;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GAzCuBR,gBAAgB;EAAA,QAExBR,QAAQ,EACHO,aAAa;AAAA;AAAA,KAHVC,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}