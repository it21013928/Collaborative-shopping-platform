{"ast":null,"code":"import _toConsumableArray from \"C:/AAA Kithmina/Education/SLIIT/Year 3/Y3S1/Disributed Systems - SE3020/Assignments/01/Project/Collaborative-shopping-platform/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport Mock from '../mock';\nimport shortId from 'shortid';\nvar NotificationDB = {\n  list: [{\n    id: shortId.generate(),\n    heading: 'Message',\n    icon: {\n      name: 'chat',\n      color: 'primary'\n    },\n    timestamp: 1570702802573,\n    title: 'New message from Devid',\n    subtitle: 'Hello, Any progress...',\n    path: 'chat'\n  }, {\n    id: shortId.generate(),\n    heading: 'Alert',\n    icon: {\n      name: 'notifications',\n      color: 'error'\n    },\n    timestamp: 1570702702573,\n    title: 'Server overloaded',\n    subtitle: 'Traffice reached 2M',\n    path: 'page-layouts/user-profile'\n  }, {\n    id: shortId.generate(),\n    heading: 'Message',\n    icon: {\n      name: 'chat',\n      color: 'primary'\n    },\n    timestamp: 1570502502573,\n    title: 'New message from Goustove',\n    subtitle: 'Hello, send me details',\n    path: 'chat'\n  }]\n};\nMock.onGet('/api/notification').reply(function () {\n  var response = NotificationDB.list;\n  return [200, response];\n});\nMock.onPost('/api/notification/add').reply(function () {\n  var response = NotificationDB.list;\n  return [200, response];\n});\nMock.onPost('/api/notification/delete').reply(function (config) {\n  var _JSON$parse = JSON.parse(config.data),\n    id = _JSON$parse.id;\n  console.log(config.data);\n  var response = NotificationDB.list.filter(function (notification) {\n    return notification.id !== id;\n  });\n  NotificationDB.list = _toConsumableArray(response);\n  return [200, response];\n});\nMock.onPost('/api/notification/delete-all').reply(function () {\n  NotificationDB.list = [];\n  var response = NotificationDB.list;\n  return [200, response];\n});","map":{"version":3,"names":["Mock","shortId","NotificationDB","list","id","generate","heading","icon","name","color","timestamp","title","subtitle","path","onGet","reply","response","onPost","config","JSON","parse","data","console","log","filter","notification"],"sources":["C:/AAA Kithmina/Education/SLIIT/Year 3/Y3S1/Disributed Systems - SE3020/Assignments/01/Project/Collaborative-shopping-platform/frontend/src/fake-db/db/notification.js"],"sourcesContent":["import Mock from '../mock';\r\nimport shortId from 'shortid';\r\n\r\nconst NotificationDB = {\r\n  list: [\r\n    {\r\n      id: shortId.generate(),\r\n      heading: 'Message',\r\n      icon: { name: 'chat', color: 'primary' },\r\n      timestamp: 1570702802573,\r\n      title: 'New message from Devid',\r\n      subtitle: 'Hello, Any progress...',\r\n      path: 'chat'\r\n    },\r\n    {\r\n      id: shortId.generate(),\r\n      heading: 'Alert',\r\n      icon: { name: 'notifications', color: 'error' },\r\n      timestamp: 1570702702573,\r\n      title: 'Server overloaded',\r\n      subtitle: 'Traffice reached 2M',\r\n      path: 'page-layouts/user-profile'\r\n    },\r\n    {\r\n      id: shortId.generate(),\r\n      heading: 'Message',\r\n      icon: { name: 'chat', color: 'primary' },\r\n      timestamp: 1570502502573,\r\n      title: 'New message from Goustove',\r\n      subtitle: 'Hello, send me details',\r\n      path: 'chat'\r\n    }\r\n  ]\r\n};\r\n\r\nMock.onGet('/api/notification').reply(() => {\r\n  const response = NotificationDB.list;\r\n  return [200, response];\r\n});\r\n\r\nMock.onPost('/api/notification/add').reply(() => {\r\n  const response = NotificationDB.list;\r\n  return [200, response];\r\n});\r\n\r\nMock.onPost('/api/notification/delete').reply((config) => {\r\n  let { id } = JSON.parse(config.data);\r\n  console.log(config.data);\r\n\r\n  const response = NotificationDB.list.filter((notification) => notification.id !== id);\r\n  NotificationDB.list = [...response];\r\n  return [200, response];\r\n});\r\n\r\nMock.onPost('/api/notification/delete-all').reply(() => {\r\n  NotificationDB.list = [];\r\n  const response = NotificationDB.list;\r\n  return [200, response];\r\n});\r\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,SAAS;AAC1B,OAAOC,OAAO,MAAM,SAAS;AAE7B,IAAMC,cAAc,GAAG;EACrBC,IAAI,EAAE,CACJ;IACEC,EAAE,EAAEH,OAAO,CAACI,QAAQ,EAAE;IACtBC,OAAO,EAAE,SAAS;IAClBC,IAAI,EAAE;MAAEC,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAU,CAAC;IACxCC,SAAS,EAAE,aAAa;IACxBC,KAAK,EAAE,wBAAwB;IAC/BC,QAAQ,EAAE,wBAAwB;IAClCC,IAAI,EAAE;EACR,CAAC,EACD;IACET,EAAE,EAAEH,OAAO,CAACI,QAAQ,EAAE;IACtBC,OAAO,EAAE,OAAO;IAChBC,IAAI,EAAE;MAAEC,IAAI,EAAE,eAAe;MAAEC,KAAK,EAAE;IAAQ,CAAC;IAC/CC,SAAS,EAAE,aAAa;IACxBC,KAAK,EAAE,mBAAmB;IAC1BC,QAAQ,EAAE,qBAAqB;IAC/BC,IAAI,EAAE;EACR,CAAC,EACD;IACET,EAAE,EAAEH,OAAO,CAACI,QAAQ,EAAE;IACtBC,OAAO,EAAE,SAAS;IAClBC,IAAI,EAAE;MAAEC,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAU,CAAC;IACxCC,SAAS,EAAE,aAAa;IACxBC,KAAK,EAAE,2BAA2B;IAClCC,QAAQ,EAAE,wBAAwB;IAClCC,IAAI,EAAE;EACR,CAAC;AAEL,CAAC;AAEDb,IAAI,CAACc,KAAK,CAAC,mBAAmB,CAAC,CAACC,KAAK,CAAC,YAAM;EAC1C,IAAMC,QAAQ,GAAGd,cAAc,CAACC,IAAI;EACpC,OAAO,CAAC,GAAG,EAAEa,QAAQ,CAAC;AACxB,CAAC,CAAC;AAEFhB,IAAI,CAACiB,MAAM,CAAC,uBAAuB,CAAC,CAACF,KAAK,CAAC,YAAM;EAC/C,IAAMC,QAAQ,GAAGd,cAAc,CAACC,IAAI;EACpC,OAAO,CAAC,GAAG,EAAEa,QAAQ,CAAC;AACxB,CAAC,CAAC;AAEFhB,IAAI,CAACiB,MAAM,CAAC,0BAA0B,CAAC,CAACF,KAAK,CAAC,UAACG,MAAM,EAAK;EACxD,kBAAaC,IAAI,CAACC,KAAK,CAACF,MAAM,CAACG,IAAI,CAAC;IAA9BjB,EAAE,eAAFA,EAAE;EACRkB,OAAO,CAACC,GAAG,CAACL,MAAM,CAACG,IAAI,CAAC;EAExB,IAAML,QAAQ,GAAGd,cAAc,CAACC,IAAI,CAACqB,MAAM,CAAC,UAACC,YAAY;IAAA,OAAKA,YAAY,CAACrB,EAAE,KAAKA,EAAE;EAAA,EAAC;EACrFF,cAAc,CAACC,IAAI,sBAAOa,QAAQ,CAAC;EACnC,OAAO,CAAC,GAAG,EAAEA,QAAQ,CAAC;AACxB,CAAC,CAAC;AAEFhB,IAAI,CAACiB,MAAM,CAAC,8BAA8B,CAAC,CAACF,KAAK,CAAC,YAAM;EACtDb,cAAc,CAACC,IAAI,GAAG,EAAE;EACxB,IAAMa,QAAQ,GAAGd,cAAc,CAACC,IAAI;EACpC,OAAO,CAAC,GAAG,EAAEa,QAAQ,CAAC;AACxB,CAAC,CAAC"},"metadata":{},"sourceType":"module"}